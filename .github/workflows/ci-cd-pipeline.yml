name: EntryTracker Production CI/CD Pipeline (GHCR)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: entrytracker

jobs:
  ci-cd-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt || true
        pip install pytest || true

    - name: Create kind cluster for testing
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        kind create cluster --wait 300s
        kubectl cluster-info
        kubectl get nodes

    - name: Deploy MySQL infrastructure
      run: |
        kubectl apply -f k8s/mysql-secret.yaml
        kubectl apply -f k8s/mysql-statefulset.yaml
        kubectl apply -f k8s/mysql-service.yaml
        kubectl wait --for=condition=ready pod/mysql-0 --timeout=300s

    - name: Deploy EntryTracker application (using public image)
      run: |
        kubectl apply -f k8s/entrytracker-configmap.yaml
        kubectl apply -f k8s/entrytracker-deployment.yaml
        kubectl apply -f k8s/entrytracker-service.yaml

        kubectl wait --for=condition=available deployment/entrytracker --timeout=300s || true
        kubectl wait --for=condition=ready pod -l app=entrytracker --timeout=300s || true

    - name: Debug pod status
      run: |
        echo "ðŸ“¦ Current pods:"
        kubectl get pods -o wide
        echo "ðŸ“‹ Pod description:"
        kubectl describe pod -l app=entrytracker

    - name: Show EntryTracker logs
      run: |
        echo "ðŸ“„ Logs from EntryTracker pod:"
        POD=$(kubectl get pod -l app=entrytracker -o jsonpath="{.items[0].metadata.name}")
        kubectl logs $POD || true
